@using System.Drawing
@using System.Net.Configuration
@using System.ServiceModel.Description
@using System.Web.UI.WebControls
@model LMS_mastery.UI.Models.Teacher.EditCourse

@{
    ViewBag.Title = "Edit";
}

<h2>@Model.Name</h2>

<div class="Links">
    <div class="btn-group" style="margin: 9px 0 5px;">
        <!--Small button bar that allows teacher to go to different areas in the website-->
        @Html.ActionLink("Class Information", "Edit", "Teacher", new { id = ViewContext.RouteData.Values["id"] }, new { @class = "btn btn-default", @type = "button" })
        @Html.ActionLink("Roster", "Class", "Teacher", new { id = ViewContext.RouteData.Values["id"] }, new { @class = "btn btn-default", @type = "button" })
        @Html.ActionLink("Gradebook", "GradebookView", "Gradebook", new { id = ViewContext.RouteData.Values["id"] }, new { @class = "btn btn-default", @type = "button" })
    </div>
</div>
<!--Begin the edit form & Analytics-->
<div class="row">
    <div class="col-sm-8">
        <fieldset>
            <!--Begin edit form-->
            <legend>Class Information</legend>
            <!--Current shows information that already exist for the course. User is able to change and save that data-->
            @using (Html.BeginForm("Edit", "Teacher", FormMethod.Post, new { role = "form" }))
            {
                @Html.HiddenFor(m => m.ClassId)
                <div class="row">
                    <div class="col-sm-6">
                        @Html.AntiForgeryToken()
                        <div class="form-group control-label">
                            <b>Name</b>
                            <div>
                                @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Name)
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="form-group control-label">
                            <b>Grade Level</b>
                            <div>

                                @Html.DropDownListFor(m => m.GradeLevel, new List<SelectListItem>()
                                {
                                    new SelectListItem(){Text="1", Value="1"},
                                    new SelectListItem(){Text="2", Value="2"},
                                    new SelectListItem(){Text="3", Value="3"},
                                    new SelectListItem(){Text="4", Value="4"},
                                    new SelectListItem(){Text="5", Value="5"},
                                    new SelectListItem(){Text="6", Value="6"},
                                    new SelectListItem(){Text="7", Value="7"},
                                    new SelectListItem(){Text="8", Value="8"},
                                    new SelectListItem(){Text="9", Value="9"},
                                    new SelectListItem(){Text="10", Value="10"},
                                    new SelectListItem(){Text="11", Value="11"},
                                    new SelectListItem(){Text="12", Value="12"},
                                },
                                    "- SELECT -", new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.GradeLevel)
                            </div>
                        </div>
                    </div>

                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Subject, new { @class = "control-label" })
                            <div>
                                @Html.TextBoxFor(m => m.Subject, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Subject)
                            </div>
                        </div>
                        <div class="form-group control-label">
                            <b>Start Date</b>
                            <div>
                                @Html.TextBoxFor(m => m.StartDate, new { @class = "form-control", Value = Model.StartDate.HasValue ? Model.StartDate.Value.ToString("d") : string.Empty })
                                @Html.ValidationMessageFor(m => m.StartDate)
                            </div>
                        </div>
                        <div class="form-group control-label">
                            <b>End Date</b>
                            <div>
                                @Html.TextBoxFor(m => m.EndDate, new { @class = "form-control", Value = Model.EndDate.Value.ToString("d") })
                                @Html.ValidationMessageFor(m => m.EndDate)
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Description, new { @class = "control-label" })
                            <div>
                                @Html.TextAreaFor(m => m.Description, 6, 6, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                </div>
                <!---Buttons to save the form or go back to the roster-->
                <div class="row">
                    <div class="col-sm-3">
                        <div class="form-group control-label">
                            <b>Archived?</b>
                            <div>
                                @Html.CheckBoxFor(m => m.IsArchived, new { @class = "checkbox biggerCheckbox" })
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-7 text-right">
                        @Html.ActionLink("Cancel", "Index", "Teacher", null, new { @class = "btn btn-default" })

                        <button class="btn btn-primary">Save Record</button>
                    </div>
                </div>
            }
            <!--End edit form-->
        </fieldset>
    </div>
    <div class="col-sm-4">
        <fieldset>
            <legend>Analytics</legend>
            <div class="row">
                <div class="col-sm-12">
                    <blockquote>
                        <p>Total Students Enrolled: <strong>@Model.ClassAnalytics.Sum(a => a.NumberStudents)</strong></p>
                    </blockquote>

                    <div class="row">
                        <h4 class="col-sm-1">Class</h4>
                        <h4 class="col-sm-offset-9">Students</h4>
                    </div>
                    @foreach (var analytic in Model.ClassAnalytics)
                    {
                        <ul class="list-group">
                            <li class="list-group-item" style="font-size: 19px">
                                <span class="badge" style="font-size: 19px">@analytic.NumberStudents</span>
                                @analytic.LetterGrade
                            </li>
                        </ul>
                    }
                </div>
            </div>
        </fieldset>
    </div>
</div>
<!--End edit form and analytics-->
<script>
    $(".biggerCheckbox").css({ "-webkit-transform": "scale(1.6, 1.6)", "-moz-transform": "scale(1.6, 1.6)", "-0-transform": "scale(1.6, 1.6)" });
</script>